// Jenkinsfile

try {

  stage('checkout') {
      node {
        cleanWs()
        checkout scm
      }
  }
  stage('init') {
    node {  
      withCredentials([
        azureServicePrincipal('azserviceprincipal')]) {
          ansiColor('xterm') {
          sh 'terraform init'
          }     
        }
    }  
  }    
  stage('create workspace') {
    node {  
      withCredentials([
        azureServicePrincipal('azserviceprincipal')]) {
          ansiColor('xterm') {
          sh 'terraform workspace new "production"'
          }     
        }
    }  
  }  
  stage('plan') {
    node {  
      withCredentials([
        azureServicePrincipal('azserviceprincipal')]) {
          ansiColor('xterm') {
          sh 'cd /var/lib/jenkins/workspace/Terra && ls -a'
          sh 'cd ./1-main-rg-wrkspaces/prod.tfvars && ls -a'
          sh 'terraform plan -var-file="./1-main-rg-wrkspaces/prod.tfvars" -out ./1-main-rg-wrkspaces/terraform.tfstate.d/production/prod.tfplan'
          }     
        }
    }  
  }
  stage('apply') {
    node {  
      withCredentials([
        azureServicePrincipal('azserviceprincipal')]) {
          ansiColor('xterm') {
          sh 'terraform apply -var-file="./1-main-rg-wrkspaces/prod.tfvars"'
          }     
        }
    }  
  }
  stage('show') {
    node {  
      withCredentials([
        azureServicePrincipal('azserviceprincipal')]) {
          ansiColor('xterm') {
          sh 'terraform show'
          }     
        }
    }  
  }
}
catch (org.jenkinsci.plugins.workflow.steps.FlowInterruptedException flowError) {
  currentBuild.result = 'ABORTED'
}
catch (err) {
  currentBuild.result = 'FAILURE'
  throw err
}
finally {
  if (currentBuild.result == 'SUCCESS') {
    currentBuild.result = 'SUCCESS'
  }
}
